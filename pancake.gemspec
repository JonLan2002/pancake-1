# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{pancake}
  s.version = "0.1.4"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Daniel Neighman"]
  s.autorequire = %q{pancake}
  s.date = %q{2009-09-15}
  s.default_executable = %q{pancake-gen}
  s.description = %q{Eat Pancake Stacks for Breakfast}
  s.email = %q{has.sox@gmail.com}
  s.executables = ["pancake-gen"]
  s.extra_rdoc_files = ["README.textile", "LICENSE", "TODO"]
  s.files = ["LICENSE", "README.textile", "Rakefile", "TODO", "lib/pancake", "lib/pancake/bootloaders.rb", "lib/pancake/configuration.rb", "lib/pancake/core_ext", "lib/pancake/core_ext/class.rb", "lib/pancake/core_ext/object.rb", "lib/pancake/core_ext/symbol.rb", "lib/pancake/errors.rb", "lib/pancake/generators", "lib/pancake/generators/base.rb", "lib/pancake/generators/short_generator.rb", "lib/pancake/generators/stack_generator.rb", "lib/pancake/generators/templates", "lib/pancake/generators/templates/%short_stack%", "lib/pancake/generators/templates/%short_stack%/lib", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/%short_stack%.rb.tt", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/config.ru.tt", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/gems", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/gems/cache", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/mounts", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/public", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/tmp", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%.rb.tt", "lib/pancake/generators/templates/%short_stack%/LICENSE.tt", "lib/pancake/generators/templates/%short_stack%/pancake.init.tt", "lib/pancake/generators/templates/%short_stack%/Rakefile.tt", "lib/pancake/generators/templates/%short_stack%/README.tt", "lib/pancake/generators/templates/%short_stack%/spec", "lib/pancake/generators/templates/%short_stack%/spec/%short_stack%_spec.rb.tt", "lib/pancake/generators/templates/%short_stack%/spec/spec_helper.rb.tt", "lib/pancake/generators/templates/%short_stack%/VERSION.tt", "lib/pancake/generators/templates/%stack_name%", "lib/pancake/generators/templates/%stack_name%/lib", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/config", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/config/environments", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/config/environments/development.rb.tt", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/config/environments/production.rb.tt", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/config/router.rb.tt", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/config.ru.tt", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/gems", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/gems/cache", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/mounts", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/public", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/tmp", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%.rb.tt", "lib/pancake/generators/templates/%stack_name%/LICENSE.tt", "lib/pancake/generators/templates/%stack_name%/pancake.init.tt", "lib/pancake/generators/templates/%stack_name%/Rakefile.tt", "lib/pancake/generators/templates/%stack_name%/README.tt", "lib/pancake/generators/templates/%stack_name%/spec", "lib/pancake/generators/templates/%stack_name%/spec/%stack_name%_spec.rb.tt", "lib/pancake/generators/templates/%stack_name%/spec/spec_helper.rb.tt", "lib/pancake/generators/templates/%stack_name%/VERSION.tt", "lib/pancake/generators/templates/common", "lib/pancake/generators/templates/common/dotgitignore", "lib/pancake/generators/templates/common/dothtaccess", "lib/pancake/generators.rb", "lib/pancake/hooks", "lib/pancake/hooks/inheritable_inner_classes.rb", "lib/pancake/hooks/on_inherit.rb", "lib/pancake/master.rb", "lib/pancake/middleware.rb", "lib/pancake/mime_types.rb", "lib/pancake/mixins", "lib/pancake/mixins/publish", "lib/pancake/mixins/publish/action_options.rb", "lib/pancake/mixins/publish.rb", "lib/pancake/mixins/render.rb", "lib/pancake/mixins/request_helper.rb", "lib/pancake/mixins/url.rb", "lib/pancake/more", "lib/pancake/more/controller", "lib/pancake/more/controller/base.rb", "lib/pancake/more/controller.rb", "lib/pancake/paths.rb", "lib/pancake/router.rb", "lib/pancake/stack", "lib/pancake/stack/app.rb", "lib/pancake/stack/bootloader.rb", "lib/pancake/stack/configuration.rb", "lib/pancake/stack/middleware.rb", "lib/pancake/stack/router.rb", "lib/pancake/stack/stack.rb", "lib/pancake/stacks", "lib/pancake/stacks/short", "lib/pancake/stacks/short/controller.rb", "lib/pancake/stacks/short/stack.rb", "lib/pancake/stacks/short.rb", "lib/pancake.rb", "lib/pancake/generators/templates/%short_stack%/.gitignore", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/gems/cache/.empty_directory", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/mounts/.empty_directory", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/public/.empty_directory", "lib/pancake/generators/templates/%short_stack%/lib/%short_stack%/tmp/.empty_directory", "lib/pancake/generators/templates/%stack_name%/.gitignore", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/gems/cache/.empty_directory", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/mounts/.empty_directory", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/public/.empty_directory", "lib/pancake/generators/templates/%stack_name%/lib/%stack_name%/tmp/.empty_directory", "spec/helpers", "spec/helpers/helpers.rb", "spec/helpers/matchers.rb", "spec/pancake", "spec/pancake/bootloaders_spec.rb", "spec/pancake/configuration_spec.rb", "spec/pancake/fixtures", "spec/pancake/fixtures/foo_stack", "spec/pancake/fixtures/foo_stack/pancake.init", "spec/pancake/fixtures/paths", "spec/pancake/fixtures/paths/controllers", "spec/pancake/fixtures/paths/controllers/controller1.rb", "spec/pancake/fixtures/paths/controllers/controller2.rb", "spec/pancake/fixtures/paths/controllers/controller3.rb", "spec/pancake/fixtures/paths/models", "spec/pancake/fixtures/paths/models/model1.rb", "spec/pancake/fixtures/paths/models/model2.rb", "spec/pancake/fixtures/paths/models/model3.rb", "spec/pancake/fixtures/paths/stack", "spec/pancake/fixtures/paths/stack/controllers", "spec/pancake/fixtures/paths/stack/controllers/controller1.rb", "spec/pancake/fixtures/paths/stack/models", "spec/pancake/fixtures/paths/stack/models/model3.rb", "spec/pancake/fixtures/paths/stack/views", "spec/pancake/fixtures/paths/stack/views/view1.erb", "spec/pancake/fixtures/paths/stack/views/view1.rb", "spec/pancake/fixtures/paths/stack/views/view2.erb", "spec/pancake/fixtures/paths/stack/views/view2.haml", "spec/pancake/fixtures/render_templates", "spec/pancake/fixtures/render_templates/context_template.html.erb", "spec/pancake/fixtures/render_templates/erb_template.html.erb", "spec/pancake/fixtures/render_templates/erb_template.json.erb", "spec/pancake/fixtures/render_templates/haml_template.html.haml", "spec/pancake/fixtures/render_templates/haml_template.xml.haml", "spec/pancake/hooks", "spec/pancake/hooks/on_inherit_spec.rb", "spec/pancake/inheritance_spec.rb", "spec/pancake/middleware_spec.rb", "spec/pancake/mime_types_spec.rb", "spec/pancake/mixins", "spec/pancake/mixins/publish_spec.rb", "spec/pancake/mixins/render_spec.rb", "spec/pancake/pancake_spec.rb", "spec/pancake/paths_spec.rb", "spec/pancake/stack", "spec/pancake/stack/app_spec.rb", "spec/pancake/stack/bootloader_spec.rb", "spec/pancake/stack/middleware_spec.rb", "spec/pancake/stack/router_spec.rb", "spec/pancake/stack/stack_configuration_spec.rb", "spec/pancake/stack/stack_spec.rb", "spec/pancake/stacks", "spec/pancake/stacks/short", "spec/pancake/stacks/short/controller_spec.rb", "spec/pancake/stacks/short/router_spec.rb", "spec/pancake/stacks/short/stack_spec.rb", "spec/spec_helper.rb", "bin/pancake-gen"]
  s.homepage = %q{http://github.com/hassox/pancake}
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.4}
  s.summary = %q{Eat Pancake Stacks for Breakfast}

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<usher>, [">= 0.5.5"])
      s.add_runtime_dependency(%q<mynyml-rack-accept-media-types>, [">= 0"])
    else
      s.add_dependency(%q<usher>, [">= 0.5.5"])
      s.add_dependency(%q<mynyml-rack-accept-media-types>, [">= 0"])
    end
  else
    s.add_dependency(%q<usher>, [">= 0.5.5"])
    s.add_dependency(%q<mynyml-rack-accept-media-types>, [">= 0"])
  end
end
